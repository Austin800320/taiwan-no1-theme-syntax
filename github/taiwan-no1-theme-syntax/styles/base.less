@import "syntax-variables";
// Syntax styles
.syntax--comment {
  color: @syntax-color-comment;
  font-style: italic;

  .syntax--markup.syntax--link {
    color: @syntax-color-comment;
  }
}

.syntax--keyword {
  color: @syntax-color-keyword;

  &.syntax--control {
    color: @syntax-color-keyword;
  }

  &.syntax--operator {
    color: @syntax-text-color;
  }

  &.syntax--other.syntax--special-method {
    color: @syntax-color-function;
  }

  &.syntax--other.syntax--unit {
    color: @@syntax-color-number;
  }
}

.syntax--storage {
  color: @syntax-color-keyword;

  &.syntax--type {
    &.syntax--annotation,
    &.syntax--primitive {
      color: @syntax-color-keyword;
    }
  }

    &.syntax--modifier {
      &.syntax--package,
      &.syntax--import {
        color: @syntax-color-keyword;
      }
    }
}

.syntax--constant {
  color: @syntax-color-number;

  &.syntax--character.syntax--escape {
    color: @color_7;
  }

  &.syntax--numeric {
    color: @syntax-color-number;
  }

  &.syntax--other.syntax--color {
    color: @color_7;
  }

  &.syntax--other.syntax--symbol {
    color: @color_7;
  }
}

.syntax--variable {
  color: @syntax-color-variable;

  &.syntax--interpolation {
    color: @syntax-color;
  }

  &.syntax--parameter.syntax--function {
    color: @syntax-text-color;
  }
  &.syntax--parameter.syntax--template{
    color: @syntax-color-variable;
  }
}

.syntax--invalid {
  &.syntax--deprecated {
    color: @syntax-deprecated-fg !important;
    background-color: @syntax-deprecated-bg !important;
  }
  &.syntax--illegal {
    color: @syntax-illegal-fg !important;
    background-color: @syntax-illegal-bg !important;
  }
}

.syntax--string {
  color: @syntax-color-string;


  &.syntax--regexp {
    color: @color_7;

    .syntax--source.syntax--ruby.syntax--embedded {
      color: @syntax-color-class;
    }
  }

  &.syntax--other.syntax--link {
    color: @syntax-color-variable;
  }
}

.syntax--punctuation {
  &.syntax--definition {
    &.syntax--comment {
      color: @nomar-gray;
    }

    &.syntax--string,
    &.syntax--variable,
    &.syntax--parameters,
    &.syntax--array {
      color: @syntax-text-color;
    }

    &.syntax--heading,
    &.syntax--identity {
      color: @syntax-color-function;
    }

    &.syntax--bold {
      color: @syntax-color-class;
      font-weight: bold;
    }

    &.syntax--italic {
      color: @syntax-color-number;
      font-style: italic;
    }
  }
  &.syntax--section.syntax--embedded {
    color: @syntax-color-invalid;
  }
}

.syntax--support {
  &.syntax--class {
    color: @syntax-color-class;
  }
  &.syntax--type {
    color: @color_7;
  }
  &.syntax--function  {
    color: @color_7;

    &.syntax--any-method {
      color: @syntax-color-method;
    }
  }
}

.syntax--entity {
  &.syntax--name.syntax--function {
    color: @syntax-color-function;
  }
  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @syntax-color-class;
  }
  &.syntax--name.syntax--section {
    color: @syntax-color-function;
  }
  &.syntax--name.syntax--tag {
    color: @syntax-color-variable;
    text-decoration: underline;
  }
  &.syntax--name.syntax--type{
    color: @syntax-color-class;
  }

  &.syntax--other.syntax--inherited-class {
    color: @syntax-color-string;
  }
  &.syntax--name.syntax--class,
  &.syntax--name.syntax--type.syntax--class {
    color: @syntax-color-tag;
  }
  &.syntax--other.syntax--attribute-name {
    color: @syntax-color-invalid;

    &.syntax--id {
      color: @syntax-color-function;
    }
  }
}

.syntax--meta {
  &.syntax--class {
    color: @syntax-color-class;
    &syntax--body{
      color: @syntax-text-color;
    }
  }
  &.syntax--method-call,
    &.syntax--method {
      color: @syntax-text-color;
    }
  &.syntax--definition {
    &.syntax--variable {
      color: @syntax-color-variable;
    }
  }
  &.syntax--link {
    color: @syntax-color-invalid;
  }

  &.syntax--require {
    color: @syntax-color-function;
  }

  &.syntax--selector {
    color: @syntax-color-number;
  }

  &.syntax--separator {
    background-color: lighten(@syntax-bg,15%);
    color: @syntax-text-color;
  }
  &.syntax--tag{
    color: @syntax-text-color;
  }
}

.syntax--none {
  color: @syntax-text-color;
}
.syntax--underline {
  text-decoration: underline;
}

.syntax--none {
  color: @syntax-text-color;
}

.syntax--markup {
  &.syntax--bold {
    color: @syntax-color-invalid;
    font-weight: bold;
  }

  &.syntax--changed {
    color: @syntax-color-number;
  }

  &.syntax--deleted {
    color: @syntax-color-keyword;
  }

  &.syntax--italic {
    color: @syntax-color-number;
    font-style: italic;
  }

  &.syntax--heading {
    color: @syntax-color-variable;
    .syntax--punctuation.syntax--definition.syntax--heading {
      color: @syntax-color-function;
    }
  }

  &.syntax--inserted {
    color: @syntax-color-variable;
  }

  &.syntax--list {
    color: @syntax-color-function;
  }

  &.syntax--quote {
    color: @syntax-color-number;
  }

  &.syntax--raw.
    color: @syntax-color-variable;

    &.syntax--inline {
      color: @syntax-color-variable;
    }
  }
}

.syntax--source.syntax--gfm .syntax--markup {
  -webkit-font-smoothing: auto;
  &.syntax--heading {
    color: @syntax-color-tag;
  }
}


// Mini editor

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}
